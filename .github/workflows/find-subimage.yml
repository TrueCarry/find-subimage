name: find-subimage
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
jobs:
  ubuntu:
    strategy:
      fail-fast: false
      matrix:
        os:
          - image: ubuntu-latest
            family: linux
        rust:
          - stable
          - beta
    runs-on: ${{ matrix.os.image }}
    continue-on-error: true

    steps:
    - uses: actions/checkout@v2

    - name: Cache toolchain
      uses: actions/cache@v2
      with:
        path: |
          ~/.rustup/toolchains
          ~/.rustup/update-hashes
          ~/.rustup/settings.toml
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache rust dependencies
      uses: Swatinem/rust-cache@v1

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        default: true

    - name: Download deps
      run: sudo apt update && sudo apt install -y clang libclang-dev libopencv-dev

    - name: Build
      run: cargo build --release --all-features --verbose

    - name: Run tests
      run: cargo test --release --all-features --verbose -- --nocapture

  mac-no-opencv:
    strategy:
      fail-fast: false
      matrix:
        os:
          - image: macos-11
            family: osx
        rust:
          - stable
          - beta
        features:
          - 'SCALAR_ONLY'
          - 'NORMAL'
    runs-on: ${{ matrix.os.image }}
    env:
      OS_FAMILY: ${{ matrix.os.family }}
      RUST_TOOLCHAIN: ${{ matrix.rust }}
      FEATURES: ${{ matrix.features }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache toolchain
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache rust dependencies
        uses: Swatinem/rust-cache@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          default: true

      - name: Test project
        run: |
          if [[ "$FEATURES" == "SCALAR_ONLY" ]]; then
            cargo test --release -vv --no-default-features
          else
            cargo test --release -vv
          fi

  docs-rs:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Cache toolchain
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache rust dependencies
        uses: Swatinem/rust-cache@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - name: test
        run: sudo apt-get install -y libclang-dev

      - name: Build docs
        run: cargo doc -vv --features=docs-only
